package VMachine;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;   // Import the FileWriter class
import java.io.IOException;  // Import the IOException class to handle errors
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ljk99
 */
public class frmAdd extends javax.swing.JFrame {
File file = new File("C:\\Users\\ljk99\\Desktop\\APU\\APU Assignment\\Diploma In Software Engineering\\5. Fith Semester\\Java Programming\\Assignment\\Vending Machine\\VendingMachine");
int ln;    
/**
     * Creates new form frmAdd
     */
    public frmAdd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPrice = new javax.swing.JTextField();
        txtProduct = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        txtProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lblName.setText("Price($):");

        lblUser.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lblUser.setText("Product:");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lblEmail.setText("Quantity:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product", "Price($)", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lblTitle.setFont(new java.awt.Font("Californian FB", 0, 36)); // NOI18N
        lblTitle.setText("Edit Items");

        btnAdd.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblID.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lblID.setText("ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitle))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmail)
                            .addComponent(lblName)
                            .addComponent(lblUser)
                            .addComponent(lblID))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID)
                            .addComponent(txtPrice)
                            .addComponent(txtProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack)
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        createFolder();
        readFile();
        countLines();
        addData(txtID.getText(),txtProduct.getText(),txtPrice.getText(),txtQuantity.getText());     
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        DefaultTableModel Tmodel = (DefaultTableModel)jTable1.getModel();
        String last = null, line;
        if (jTable1.getSelectedRowCount()==1){
         String ID = txtID.getText();
         String Product = txtProduct.getText();
         String price= txtPrice.getText();
         String quantity= txtQuantity.getText();
         
         if(Product.equals("") || ID.equals("") || price.equals("") || quantity.equals("")){
            JOptionPane.showMessageDialog(null, "Do Not Leave The Field Blank");
            } else {     
            Tmodel.setValueAt(ID, jTable1.getSelectedRow(),0);
            Tmodel.setValueAt(Product, jTable1.getSelectedRow(),1);
            Tmodel.setValueAt(price, jTable1.getSelectedRow(),2);
            Tmodel.setValueAt(quantity, jTable1.getSelectedRow(),3);
            JOptionPane.showMessageDialog(null,"Updated Successfully"); 
         
            try {
                FileWriter fw = new FileWriter("ItemsData.txt",true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter("ItemsData.txt");
                pw.print("");
                for(int i = 0; i < jTable1.getRowCount(); i++){
                    for(int x = 0; x < jTable1.getColumnCount(); x++){
                        bw.write(jTable1.getValueAt(i,x).toString()+ ",");                         
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
                BufferedReader bufferedreader = new BufferedReader(new FileReader("ItemsData.txt"));
                while ((line = bufferedreader.readLine()) != null) {
                    last = line;
                    if (line != null){
                        last = line;
                    }
                }   
            }
                catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error Occured,Update Failed");
            }
         
       }
        } 
        else {JOptionPane.showMessageDialog(null, "Some Error Occured. Failed to update");
        }  
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String last = null, line;
        DefaultTableModel Tmodel = (DefaultTableModel) jTable1.getModel();
        try{
        int SelectedRowIndex = jTable1.getSelectedRow();
        Tmodel.removeRow(SelectedRowIndex);
        txtID.setText("");
        txtProduct.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        
        FileWriter fw = new FileWriter("ItemsData.txt",true);
        BufferedWriter bw = new BufferedWriter(fw);
        PrintWriter pw = new PrintWriter("ItemsData.txt");
        pw.print("");
        for(int i = 0; i < jTable1.getRowCount(); i++){
            for(int x = 0; x < jTable1.getColumnCount(); x++){
                bw.write(jTable1.getValueAt(i,x).toString()+ ",");      
            }
                bw.newLine();
                }
                JOptionPane.showMessageDialog(null, "Item Deleted");
                bw.close();
                fw.close();
                BufferedReader bufferedreader = new BufferedReader(new FileReader("ItemsData.txt"));
                while ((line = bufferedreader.readLine()) != null) {
                    last = line;
                    if (line != null){
                        last = line;
                    }
                }
        }catch(Exception ex2) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex2);           
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.toBack();
        frmHome Form = new frmHome();
        Form.setVisible(true);
        Form.toFront();
        
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        displayFile();
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel Tmodel = (DefaultTableModel)jTable1.getModel();
        
        //Display data into text field when the specific row is selected
        String JTbID;
        String JTbProduct;
        String JTbPrice;
        String JTbQuantity;
        JTbID = Tmodel.getValueAt(jTable1.getSelectedRow(), 0).toString();
        JTbProduct = Tmodel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        JTbPrice = Tmodel.getValueAt(jTable1.getSelectedRow(), 2).toString();
        JTbQuantity = Tmodel.getValueAt(jTable1.getSelectedRow(), 3).toString();
        
        txtID.setText(JTbID);
        txtProduct.setText(JTbProduct);
        txtPrice.setText(JTbPrice);
        txtQuantity.setText(JTbQuantity);
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAdd().setVisible(true);
            }
        });
    }

    private void createFolder(){
        if(!file.exists()){
            file.mkdirs();
        }
    }

    private void readFile(){
        try {
         FileReader fr = new FileReader(file + "\\ItemsData.txt");
        } catch (FileNotFoundException ex) {
            try {
            FileWriter fw = new FileWriter(file + "\\ItemsData.txt");
            } catch (IOException ex1) {
            Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }
    private void addData(String txtID,String txtProduct,String txtPrice,String txtQuantity){
        try{
        RandomAccessFile addFile = new RandomAccessFile(file +"\\ItemsData.txt", "rw");
        for(int i=0;i<ln;i++){
            addFile.readLine();
        }
            if(txtID.equals("") || txtProduct.equals("") || txtPrice.equals("") || txtQuantity.equals("")){        
            JOptionPane.showMessageDialog(null, "Do Not Leave The Field Blank");
            } else {
                addFile.writeBytes(txtID + "," + txtProduct + "," +txtPrice + "," +txtQuantity);
                addFile.writeBytes("\r\n");
                        //Store data into String Array
                String data[] = {txtID,txtProduct,txtPrice,txtQuantity};
        
                DefaultTableModel TModel = (DefaultTableModel)jTable1.getModel();
                //Add String Data
                TModel.addRow(data);
                JOptionPane.showMessageDialog(null, "Sucessfully Added");
            }        
        } catch (FileNotFoundException ex){
            Logger.getLogger(frmAdd.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(frmAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void countLines(){
    try{
        ln=1;
        RandomAccessFile addFile = new RandomAccessFile(file+"\\UserData.txt", "rw");
        for(int i=0;addFile.readLine() != null; i++){
            ln++;
        }
        System.out.println("Number of lines:"+ln);
    }   catch (FileNotFoundException ex) {
            Logger.getLogger(frmAdd.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(frmAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    
    private void displayFile(){
        String filePath = "C:\\Users\\ljk99\\Desktop\\APU\\APU Assignment\\Diploma In Software Engineering\\5. Fith Semester\\Java Programming\\Assignment\\Vending Machine\\VendingMachine\\ItemsData.txt";
        File file = new File(filePath);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            
            // get lines from txt file
            Object[] tableLines = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);
            }
            
            
        } catch (Exception ex) {
            Logger.getLogger(frmAdd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUser;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
